#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ Sui CLI
 * –í–ù–ò–ú–ê–ù–ò–ï: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –∫–ª—é—á–æ–º –∏ –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ –µ–≥–æ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!
 */

const { execSync } = require('child_process');

async function exportPrivateKey() {
    try {
        console.log('üîë –≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∏–∑ Sui CLI...\n');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—à–µ–ª—å–∫–∞—Ö –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ
        const addressesOutput = execSync('sui client addresses --json', { encoding: 'utf-8' });
        const addresses = JSON.parse(addressesOutput);
        
        console.log(`–ê–∫—Ç–∏–≤–Ω—ã–π –∞–¥—Ä–µ—Å: ${addresses.activeAddress}`);
        
        // –ù–∞—Ö–æ–¥–∏–º alias –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞
        const activeAddressInfo = addresses.addresses.find(addr => addr[1] === addresses.activeAddress);
        const alias = activeAddressInfo ? activeAddressInfo[0] : null;
        
        if (!alias) {
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ alias –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–¥—Ä–µ—Å–∞');
        }
        
        console.log(`Alias –∫–æ—à–µ–ª—å–∫–∞: ${alias}`);
        
        // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É—è alias
        const privateKeyOutput = execSync(`sui keytool export --key-identity ${alias}`, { encoding: 'utf-8' });
        
        // –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –±—É–¥–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ suiprivkey...
        const privateKeyMatch = privateKeyOutput.match(/(suiprivkey[A-Za-z0-9]+)/);
        
        if (privateKeyMatch) {
            const privateKey = privateKeyMatch[1];
            console.log('\n‚úÖ –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω!');
            console.log('üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç –∫–ª—é—á –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏:\n');
            console.log('----------------------------------------');
            console.log(privateKey);
            console.log('----------------------------------------\n');
            
            console.log('üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–¥–µ:');
            console.log(`import { walletConfig } from './wallet-config';`);
            console.log(`walletConfig.importWalletFromSuiPrivateKey('${privateKey}');`);
            console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –∫–ª—é—á–æ–º –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –µ–≥–æ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –≤–∏–¥–µ!');
            
        } else {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ –≤—ã–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã');
            console.log('–ü–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥:');
            console.log(privateKeyOutput);
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞:', error.message);
        console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
        console.log('1. Sui CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        console.log('2. –£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –∫–æ—à–µ–ª–µ–∫');
        console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sui client active-address');
    }
}

exportPrivateKey();
